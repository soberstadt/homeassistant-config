- platform: darksky
  api_key: !secret darksky
  monitored_conditions:
    - summary
    - apparent_temperature
    - temperature
    - humidity
  scan_interval:
    minutes: 30

- platform: mqtt
  state_topic: "/devices/mqtt_arrow_3/state"
  name: "Garage Distance"
  unit_of_measurement: "cm"
  value_template: '{{ value_json.distance }}'

- platform: mqtt
  state_topic: "/devices/mqtt_arrow_3/state"
  name: "Garage Status"
  value_template: '{{ value_json.state }}'

- platform: uptime
  name: HA Uptime
  unit_of_measurement: hours

- platform: rest
  name: SpaceX
  json_attributes:
    - mission_name
    - launch_site
    - rocket
  value_template: '{{ value_json["launch_date_unix"] }}'
  resource: 'https://api.spacexdata.com/v2/launches/next'

- platform: template
  sensors:
    spacex_next_launch_date:
      friendly_name: 'Next Launch Date'
      value_template: '{{ states.sensor.spacex.state | int | timestamp_custom("%m/%d/%Y %H:%M")}}'
    spacex_next_rocket:
      friendly_name: 'Rocket'
      value_template: '{{ states.sensor.spacex.attributes["rocket"]["rocket_name"] }}'
    spacex_next_landing_type:
      friendly_name: 'Landing Type'
      value_template: '{{ states.sensor.spacex.attributes["rocket"]["first_stage"]["cores"][0]["landing_type"] }}'
    spacex_next_launch_site:
      friendly_name: 'Launch Site'
      value_template: '{{ states.sensor.spacex.attributes["launch_site"]["site_name"] }}'
    spacex_next_mission_name:
      friendly_name: 'Mission Name'
      value_template: '{{ states.sensor.spacex.attributes["mission_name"] }}'

    spencers_battery:
      unit_of_measurement: '%'
      value_template: '{{ states.device_tracker.google_maps_114754196444501299267.attributes.battery_level | round(0) }}'

    roku_source:
      value_template: '{{ states.media_player.roku.attributes.source }}'

    arrow_2_real_feel:
      friendly_name: 'Arrow 2 Real Feel'
      entity_id: [sensor.arrow_2_temperature, sensor.arrow_2_humidity]
      value_template: >-
        {% set T = states('sensor.arrow_2_temperature')|float %}
        {% set RH = states('sensor.arrow_2_humidity')|float %}
        {% set STEADMAN_HI = 0.5 * (T + 61.0 + ((T-68.0)*1.2) + (RH*0.094)) %}
        {% if STEADMAN_HI >= 80 %}
          {% set ROTHFUSZ_HI = -42.379 + 2.04901523*T + 10.14333127*RH - 0.22475541*T*RH - 0.00683783*T*T - 0.05481717*RH*RH + 0.00122874*T*T*RH + 0.00085282*T*RH*RH - 0.00000199*T*T*RH*RH %}
          {% set HI = ROTHFUSZ_HI %}
          {% if RH < 13 and 80 < T < 112 %}
            {% set ADJUSTMENT = ((13-RH)/4)*((17-(T-95)|abs)/17)**0.5 %}
            {% set HI = HI - ADJUSTMENT %}
          {% elif RH > 85 and 80 < T < 87 %}
            {% set ADJUSTMENT = ((RH-85)/10) * ((87-T)/5) %}
            {% set HI = HI + ADJUSTMENT %}
          {% endif %}
        {% else %}
          {% set HI = STEADMAN_HI %}
        {% endif %}
        {% set HI_C = (HI-32)/1.8 %}
        {{- HI_C|round(1) -}}
      unit_of_measurement: 'Â°C'

- platform: min_max
  type: mean
  name: House Mean Temperature
  entity_ids:
    - sensor.arrow_2_temperature
    - sensor.arrow_5_temperature
    - sensor.sonoff_2_temperature
- platform: min_max
  type: mean
  name: House Mean Humidity
  entity_ids:
    - sensor.arrow_2_humidity
    - sensor.arrow_5_humidity
    - sensor.sonoff_2_humidity
